
 ███            █████████  ██████████ ██████   ██████ █████ ██████   █████ █████
░░░███         ███░░░░░███░░███░░░░░█░░██████ ██████ ░░███ ░░██████ ░░███ ░░███
  ░░░███      ███     ░░░  ░███  █ ░  ░███░█████░███  ░███  ░███░███ ░███  ░███
    ░░░███   ░███          ░██████    ░███░░███ ░███  ░███  ░███░░███░███  ░███
     ███░    ░███    █████ ░███░░█    ░███ ░░░  ░███  ░███  ░███ ░░██████  ░███
   ███░      ░░███  ░░███  ░███ ░   █ ░███      ░███  ░███  ░███  ░░█████  ░███
 ███░         ░░█████████  ██████████ █████     █████ █████ █████  ░░█████ █████
░░░            ░░░░░░░░░  ░░░░░░░░░░ ░░░░░     ░░░░░ ░░░░░ ░░░░░    ░░░░░ ░░░░░

Tips for getting started:
1. Ask questions, edit files, or run commands.
2. Be specific for the best results.
3. Create GEMINI.md files to customize your interactions with Gemini.
4. /help for more information.

╭─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
│  > @References/CRYENGINE_Source-release/Code/CryEngine/Crycommon/CryMath 여기 확인하고 모든 헤더 파일이 참조하고 있는 헤더를 나열해봐.  │
╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯

 ╭────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
 │ ✔ ReadManyFiles Will attempt to read and concatenate files using patterns:                                                                        │
 │    References/CRYENGINE_Source-release/Code/CryEngine/Crycommon/CryMath/**                                                                         │
 │     (within target directory:                                                                                                                      │
 │    /Users/asdf/work/cat                                                                                                                            │
 │    ) . Excluding: patterns like                                                                                                                    │
 │    **/node_modules/**`, `**/.git/**...`. File encoding: utf-8. Separator: "--- path/to/file.ext ---".                                              │
 │                                                                                                                                                    │
 │    ### ReadManyFiles Result (Target Dir: `/Users/asdf/work/cat`)                                                                                   │
 │                                                                                                                                                    │
 │    Successfully read and concatenated content from **48 file(s)**.                                                                                 │
 │                                                                                                                                                    │
 │    **Processed Files (first 10 shown):**                                                                                                           │
 │    - `References/CRYENGINE_Source-release/Code/CryEngine/Crycommon/CryMath/AABBSV.h`                                                               │
 │    - `References/CRYENGINE_Source-release/Code/CryEngine/Crycommon/CryMath/Angle.h`                                                                │
 │    - `References/CRYENGINE_Source-release/Code/CryEngine/Crycommon/CryMath/Bezier.h`                                                               │
 │    - `References/CRYENGINE_Source-release/Code/CryEngine/Crycommon/CryMath/Bezier_impl.h`                                                          │
 │    - `References/CRYENGINE_Source-release/Code/CryEngine/Crycommon/CryMath/CryHalf.inl`                                                            │
 │    - `References/CRYENGINE_Source-release/Code/CryEngine/Crycommon/CryMath/CryHalf_info.h`                                                         │
 │    - `References/CRYENGINE_Source-release/Code/CryEngine/Crycommon/CryMath/CryRandomInternal.h`                                                    │
 │    - `References/CRYENGINE_Source-release/Code/CryEngine/Crycommon/CryMath/Cry_Camera.h`                                                           │
 │    - `References/CRYENGINE_Source-release/Code/CryEngine/Crycommon/CryMath/Cry_Color.h`                                                            │
 │    - `References/CRYENGINE_Source-release/Code/CryEngine/Crycommon/CryMath/Cry_Geo.h`                                                              │
 │    - ...and 38 more.                                                                                                                               │
 ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
✦ Based on my analysis of the provided files, here is a comprehensive list of all referenced header files:

  Standard Library & System Headers
   - <algorithm>
   - <cfloat>
   - <cmath>
   - <cstdlib>
   - <limits>
   - <type_traits>
   - "arm_neon.h" (conditional)
   - <xmmintrin.h> (conditional)

  Crytek Engine Headers
   - "Angle.h"
   - "Bezier.h"
   - "CryHalf.inl"
   - "CryRandomInternal.h"
   - "Cry_Geo.h"
   - "Cry_GeoDistance.h"
   - "Cry_GeoIntersect.h"
   - "Cry_GeoOverlap.h"
   - "Cry_GeoProjection.h"
   - "Cry_Math.h"
   - "Cry_Math_SSE.h"
   - "Cry_Matrix33.h"
   - "Cry_Matrix34.h"
   - "Cry_Matrix34H.h"
   - "Cry_Matrix44.h"
   - "Cry_Matrix44H.h"
   - "Cry_MatrixDiag.h"
   - "Cry_Quat.h"
   - "Cry_ValidNumber.h"
   - "Cry_Vector2.h"
   - "Cry_Vector3.h"
   - "Cry_Vector4.h"
   - "Cry_Vector4H.h"
   - "Cry_XOptimise.h"
   - "FinalizingSpline.h"
   - "GeomQuery.h"
   - "LCGRandom.h"
   - "MTPseudoRandom.h"
   - "NumberVector.h"
   - "QTangent.h"
   - "RadixSort.h"
   - "RadixSortImpl.h"
   - "Random.h"
   - "Range.h"
   - "Rotation.h"
   - "TCBSpline.h"
   - "Transform.h"
   - <Cry3DEngine/CryPodArray.h>
   - <Cry3DEngine/IIndexedMesh.h>
   - <CryCore/BaseTypes.h>
   - <CryCore/BitFiddling.h>
   - <CryCore/Containers/CryArray.h>
   - <CryCore/CryCustomTypes.h>
   - <CryCore/Platform/platform.h>
   - <CryMath/ISplines.h>
   - <CryMemory/CrySizer.h>
   - <CryMemory/MemoryAccess.h>
   - <CryMovie/AnimTime.h>
   - <CrySerialization/Decorators/Range.h>
   - <CrySerialization/Enum.h>
   - <CrySerialization/Forward.h>
   - <CrySerialization/IArchive.h>
   - <CrySerialization/Math.h>
   - <CrySerialization/STL.h>
   - <CrySchematyc/Reflection/TypeDesc.h>
   - <CrySystem/ISystem.h>

╭───────────────────────────╮
│  > 다 뭐하는건지 찾아봐.  │
╰───────────────────────────╯

✦ 네, 각 헤더 파일이 어떤 역할을 하는지 설명해 드리겠습니다.

  C++ 표준 라이브러리 및 시스템 헤더
   * <algorithm>: 검색, 정렬, 개수 세기 등 원소 범위를 조작하는 함수 모음을 제공합니다.
   * <cfloat>: 부동 소수점 산술과 관련된 상수(예: FLT_MAX)를 정의합니다.
   * <cmath>: 일반적인 수학 연산(예: sin, cos, sqrt)을 위한 함수들을 선언합니다.
   * <cstdlib>: 일반적인 목적의 함수(예: malloc, rand)를 선언합니다.
   * <limits>: 산술 타입의 속성(예: numeric_limits)에 대한 정보를 제공합니다.
   * <type_traits>: 컴파일 타임에 타입 정보를 얻거나 타입을 변환하는 유틸리티를 제공합니다.
   * "arm_neon.h": ARM 플랫폼의 NEON (Advanced SIMD) 내장 함수를 위한 헤더입니다.
   * <xmmintrin.h>: Intel 플랫폼의 SSE (Streaming SIMD Extensions) 내장 함수를 위한 헤더입니다.

  Crytek 엔진 헤더
   * "Angle.h": 각도를 표현하는 클래스(CAngle, CAngles3)를 정의하며, 도와 라디안 간의 변환을 처리합니다.
   * "Bezier.h" & "Bezier_impl.h": 베지어 곡선 계산 및 키프레임 구조체(SBezierKey)를 구현합니다.
   * "CryHalf.inl" & "CryHalf_info.h": 16비트 반정밀도 부동 소수점 숫자(CryHalf)와 그 직렬화 정보를 구현합니다.
   * "CryRandomInternal.h": 특정 범위 내에서 다른 데이터 타입에 대한 난수를 생성하기 위한 내부 헬퍼 함수를 포함합니다.
   * "Cry_Camera.h": 뷰 행렬, 투영, 프러스텀 컬링 등을 처리하는 CCamera 클래스를 정의합니다.
   * "Cry_Color.h": 색상 구조체(Color_tpl, ColorB, ColorF)와 관련 연산을 정의합니다.
   * "Cry_Geo.h": 기하학 관련 타입들을 위한 마스터 헤더로, AABB, OBB, Sphere, Ray, Line, Triangle과 같은 기본적인 기하학적 모양을 정의합니다.
   * "Cry_GeoDistance.h": 다양한 기하학적 프리미티브 간의 거리(점-삼각형, 점-AABB 등)를 계산하는 함수를 제공합니다.
   * "Cry_GeoIntersect.h": 기하학적 프리미티브 간의 교차(광선-삼각형, 선-구 등)를 테스트하는 함수를 제공합니다.
   * "Cry_GeoOverlap.h": 기하학적 프리미티브 간의 겹침(AABB-AABB, 구-삼각형 등)을 테스트하는 함수를 제공합니다.
   * "Cry_GeoProjection.h": 점을 평면에 투영하는 것과 같이 기하학적 개체를 다른 개체에 투영하는 함수를 제공합니다.
   * "Cry_Math.h": 핵심 수학 헤더로, 기본적인 수학 상수, 함수(sin, cos, sqrt)를 정의하고 벡터 및 행렬과 같은 다른 핵심 수학 헤더를 포함합니다.
   * "Cry_Math_SSE.h": 수학 타입에 대한 SSE (Streaming SIMD Extensions) 최적화 및 정의를 포함하여 더 빠른 병렬 계산을 가능하게 합니다.
   * "Cry_Matrix33.h": 주로 회전에 사용되는 3x3 행렬 클래스를 정의합니다.
   * "Cry_Matrix34.h": 주로 아핀 변환(회전 및 이동)에 사용되는 3x4 행렬 클래스를 정의합니다.
   * "Cry_Matrix34H.h": 3x4 행렬의 하드웨어 가속(SIMD) 버전입니다.
   * "Cry_Matrix44.h": 동차 좌표계에서의 변환(예: 투영 행렬)에 사용되는 4x4 행렬 클래스를 정의합니다.
   * "Cry_Matrix44H.h": 4x4 행렬의 하드웨어 가속(SIMD) 버전입니다.
   * "Cry_MatrixDiag.h": 주로 크기 조절에 사용되는 3x3 대각 행렬을 정의합니다.
   * "Cry_Quat.h": 3D 회전 및 변환을 나타내기 위한 쿼터니언 클래스(Quat, QuatT, QuatTS)를 정의합니다.
   * "Cry_ValidNumber.h": 숫자(특히 부동 소수점)가 유효한지(NaN 또는 무한대가 아닌지) 확인하는 함수(IsValid, IsEquivalent)를 제공합니다.
   * "Cry_Vector2.h": 2D 벡터 클래스(Vec2)를 정의합니다.
   * "Cry_Vector3.h": 3D 벡터 클래스(Vec3)와 오일러 각(Ang3)을 정의합니다.
   * "Cry_Vector4.h": 4D 벡터 클래스(Vec4)와 평면 구조체(Plane)를 정의합니다.
   * "Cry_Vector4H.h": 4D 벡터 및 평면의 하드웨어 가속(SIMD) 버전입니다.
   * "Cry_XOptimise.h": 특정 플랫폼에 대한 최적화된 기타 수학 함수를 포함합니다.
   * "FinalizingSpline.h": 최적화나 직렬화를 위해 "최종" 표현을 갖는 스플라인을 위한 헬퍼 클래스입니다.
   * "GeomQuery.h" & "GeomQuery.inl": 표면 위의 임의의 점을 생성하거나 범위를 계산하는 등 기하학적 쿼리를 수행하기 위한 구조체와 함수를 정의합니다.
   * "ISplineSerialization_impl.h": 스플라인 데이터 직렬화를 위한 구현 세부 정보입니다.
   * "LCGRandom.h": 선형 합동 생성기(CRndGen)를 이용한 유사 난수 생성기를 구현합니다.
   * "MTPseudoRandom.h": 메르센 트위스터(CMTRand_int32) 유사 난수 생성기를 구현합니다.
   * "NumberVector.h": 다양한 크기의 벡터 타입에 공통적인 기능을 제공하는 기본 템플릿 클래스입니다.
   * "PNoise3.h": 1D, 2D, 3D 노이즈를 위한 펄린 노이즈 생성기(CPNoise3)를 구현합니다.
   * "QTangent.h": 탄젠트 공간 표현(탄젠트, 바이탄젠트, 반사)과 압축된 쿼터니언 형식(QTangent) 간의 변환 함수를 정의합니다.
   * "RadixSort.h" & "RadixSortImpl.h": 효율적인 비비교 정수 정렬 알고리즘인 기수 정렬을 구현합니다.
   * "Random.h": 엔진의 난수 생성기에 대한 전역적이고 사용하기 쉬운 인터페이스를 제공합니다.
   * "Range.h": 두 값 사이의 범위를 나타내는 템플릿 클래스 TRange를 정의합니다.
   * "Rotation.h": 방향을 나타내기 위해 쿼터니언을 감싸는 CRotation 클래스를 정의합니다.
   * "TCBSpline.h": 에르미트 스플라인의 한 종류인 TCB (Tension, Continuity, Bias) 스플라인을 구현합니다.
   * "Transform.h": 이동, 회전, 크기 조절을 단일 개체로 결합하는 CTransform 클래스를 정의합니다.
   * <Cry3DEngine/CryPodArray.h>: 3D 엔진 모듈의 간단한 배열 클래스로, std::vector와 유사하지만 특정 메모리 처리를 합니다.
   * <Cry3DEngine/IIndexedMesh.h>: 인덱싱된 메쉬 데이터에 대한 인터페이스로, 정점, 탄젠트 등의 구조를 정의합니다.
   * <CryCore/BaseTypes.h>: 엔진 전반에 사용되는 기본 데이터 타입(예: uint32, f32)을 정의합니다.
   * <CryCore/BitFiddling.h>: 저수준 비트 조작을 위한 함수를 제공합니다.
   * <CryCore/Containers/CryArray.h>: CryEngine에서 사용되는 동적 배열 컨테이너를 정의합니다.
   * <CryCore/CryCustomTypes.h>: 직렬화나 리플렉션을 위한 사용자 정의 데이터 타입을 정의합니다.
   * <CryCore/Platform/platform.h>: 플랫폼별 정의와 매크로를 포함합니다.
   * <CryMath/ISplines.h>: 엔진에서 사용되는 다양한 스플라인 타입에 대한 인터페이스를 정의합니다.
   * <CryMemory/CrySizer.h>: 객체의 메모리 사용량을 계산하기 위한 인터페이스(ICrySizer)를 정의합니다.
   * <CryMemory/MemoryAccess.h>: 안전하고 제어된 메모리 접근을 위한 유틸리티를 제공합니다.
   * <CryMovie/AnimTime.h>: 무비/애니메이션 시스템을 위한 시간 관련 구조체를 정의합니다.
   * <CrySerialization/Decorators/Range.h>: 에디터에서 값의 유효 범위를 지정하기 위한 직렬화 데코레이터입니다.
   * <CrySerialization/Enum.h>: C++ 열거형(enum)을 직렬화하기 위한 유틸리티를 제공합니다.
   * <CrySerialization/Forward.h>: 헤더 의존성을 줄이기 위해 직렬화 라이브러리에 대한 전방 선언을 제공합니다.
   * <CrySerialization/IArchive.h>: 직렬화 시스템의 주 인터페이스(IArchive)입니다.
   * <CrySerialization/Math.h>: 수학 타입(벡터, 행렬 등)에 대한 직렬화 지원을 제공합니다.
   * <CrySerialization/STL.h>: 표준 템플릿 라이브러리(STL) 컨테이너에 대한 직렬화 지원을 제공합니다.
   * <CrySchematyc/Reflection/TypeDesc.h>: Schematyc 시스템의 일부로, 타입 리플렉션 및 비주얼 스크립팅 환경에 타입을 노출하는 데 사용됩니다.
   * <CrySystem/ISystem.h>: 엔진의 핵심 시스템에 대한 주 인터페이스로, 난수 생성기와 같은 전역 컴포넌트에 대한 접근을 제공합니다.
